/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import React, { useRef } from "react";

const HELIX_SPEED = 6;

export function Airplane(props) {
  const { nodes, materials } = useGLTF("./models/airplane/planeur.glb");
  console.log(nodes.Cylinder.geometry);

  const helix = useRef();

  useFrame((_state, delta) => {
    // helix.current.rotation.x += delta * HELIX_SPEED;
  });

  return (
    <group {...props} dispose={null}>
      <pointLight position={[0.09, 1.33, -1]} intensity={8} color="lightblue" />
      <mesh
        // rotation={[1, 0, 1]}
        receiveShadow
        rotation={[0, Math.PI / 2, 0]}
        geometry={nodes.Cylinder.geometry}
        material={materials.plane}
        position={[0.09, 0.33, 0]}
      />

      <mesh
        geometry={nodes.Cylinder.geometry}
        position={[0.09, 0.33, 0]}
        rotation={[0, Math.PI / 2, 0]}
      >
        <meshStandardMaterial
          {...materials["lambert2SG.001"]}
          transparent
          opacity={1}
          color={"#a395e1"}
          intensity={100}
        />
      </mesh>
    </group>
  );
}

useGLTF.preload("./models/airplane/model.glb");
